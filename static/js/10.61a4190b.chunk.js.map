{"version":3,"sources":["pages/ComingSoon.js","hooks/useCountdown.js"],"names":["SOCIALS","name","icon","facebookFill","width","height","color","instagramFilled","linkedinFill","twitterFill","RootStyle","styled","Page","theme","minHeight","display","alignItems","paddingTop","spacing","paddingBottom","CountdownStyle","justifyContent","SeparatorStyle","Typography","margin","breakpoints","up","ComingSoon","countdown","date","useState","days","hours","minutes","seconds","setCountdown","useEffect","interval","setInterval","setNewTime","clearInterval","distanceToNow","Date","getDays","Math","floor","getHours","slice","getMinutes","getSeconds","useCountdown","title","Container","Box","sx","maxWidth","textAlign","variant","paragraph","my","OutlinedInput","fullWidth","placeholder","endAdornment","InputAdornment","position","Button","size","pr","transition","transitions","create","easing","easeInOut","duration","shorter","boxShadow","customShadows","z8","borderWidth","borderColor","palette","grey","mx","map","social","Tooltip"],"mappings":"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","file":"static/js/10.61a4190b.chunk.js","sourcesContent":["import { Icon } from '@iconify/react';\nimport twitterFill from '@iconify/icons-eva/twitter-fill';\nimport facebookFill from '@iconify/icons-eva/facebook-fill';\nimport linkedinFill from '@iconify/icons-eva/linkedin-fill';\nimport instagramFilled from '@iconify/icons-ant-design/instagram-filled';\n// material\nimport { styled } from '@mui/material/styles';\nimport { Box, Button, Tooltip, Container, Typography, InputAdornment, OutlinedInput } from '@mui/material';\n// hooks\nimport useCountdown from '../hooks/useCountdown';\n// components\nimport { MIconButton } from '../components/@material-extend';\nimport Page from '../components/Page';\nimport { ComingSoonIllustration } from '../assets';\n\n// ----------------------------------------------------------------------\n\nconst SOCIALS = [\n  {\n    name: 'Facebook',\n    icon: <Icon icon={facebookFill} width={24} height={24} color=\"#1877F2\" />\n  },\n  {\n    name: 'Instagram',\n    icon: <Icon icon={instagramFilled} width={24} height={24} color=\"#D7336D\" />\n  },\n  {\n    name: 'Linkedin',\n    icon: <Icon icon={linkedinFill} width={24} height={24} color=\"#006097\" />\n  },\n  {\n    name: 'Twitter',\n    icon: <Icon icon={twitterFill} width={24} height={24} color=\"#1C9CEA\" />\n  }\n];\n\nconst RootStyle = styled(Page)(({ theme }) => ({\n  minHeight: '100%',\n  display: 'flex',\n  alignItems: 'center',\n  paddingTop: theme.spacing(15),\n  paddingBottom: theme.spacing(10)\n}));\n\nconst CountdownStyle = styled('div')({\n  display: 'flex',\n  justifyContent: 'center'\n});\n\nconst SeparatorStyle = styled(Typography)(({ theme }) => ({\n  margin: theme.spacing(0, 1),\n  [theme.breakpoints.up('sm')]: {\n    margin: theme.spacing(0, 2.5)\n  }\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function ComingSoon() {\n  const countdown = useCountdown(new Date('07/07/2022 21:30'));\n\n  return (\n    <RootStyle title=\"Coming Soon | Minimal-UI\">\n      <Container>\n        <Box sx={{ maxWidth: 480, margin: 'auto', textAlign: 'center' }}>\n          <Typography variant=\"h3\" paragraph>\n            Coming Soon!\n          </Typography>\n          <Typography sx={{ color: 'text.secondary' }}>We are currently working hard on this page!</Typography>\n\n          <ComingSoonIllustration sx={{ my: 10, height: 240 }} />\n\n          <CountdownStyle>\n            <div>\n              <Typography variant=\"h2\">{countdown.days}</Typography>\n              <Typography sx={{ color: 'text.secondary' }}>Days</Typography>\n            </div>\n\n            <SeparatorStyle variant=\"h2\">:</SeparatorStyle>\n\n            <div>\n              <Typography variant=\"h2\">{countdown.hours}</Typography>\n              <Typography sx={{ color: 'text.secondary' }}>Hours</Typography>\n            </div>\n\n            <SeparatorStyle variant=\"h2\">:</SeparatorStyle>\n\n            <div>\n              <Typography variant=\"h2\">{countdown.minutes}</Typography>\n              <Typography sx={{ color: 'text.secondary' }}>Minutes</Typography>\n            </div>\n\n            <SeparatorStyle variant=\"h2\">:</SeparatorStyle>\n\n            <div>\n              <Typography variant=\"h2\">{countdown.seconds}</Typography>\n              <Typography sx={{ color: 'text.secondary' }}>Seconds</Typography>\n            </div>\n          </CountdownStyle>\n\n          <OutlinedInput\n            fullWidth\n            placeholder=\"Enter your email\"\n            endAdornment={\n              <InputAdornment position=\"end\">\n                <Button variant=\"contained\" size=\"large\">\n                  Notify Me\n                </Button>\n              </InputAdornment>\n            }\n            sx={{\n              my: 5,\n              pr: 0.5,\n              transition: (theme) =>\n                theme.transitions.create('box-shadow', {\n                  easing: theme.transitions.easing.easeInOut,\n                  duration: theme.transitions.duration.shorter\n                }),\n              '&.Mui-focused': {\n                boxShadow: (theme) => theme.customShadows.z8\n              },\n              '& fieldset': {\n                borderWidth: `1px !important`,\n                borderColor: (theme) => `${theme.palette.grey[500_32]} !important`\n              }\n            }}\n          />\n\n          <Box sx={{ textAlign: 'center', '& > *': { mx: 1 } }}>\n            {SOCIALS.map((social) => (\n              <Tooltip key={social.name} title={social.name}>\n                <MIconButton>{social.icon}</MIconButton>\n              </Tooltip>\n            ))}\n          </Box>\n        </Box>\n      </Container>\n    </RootStyle>\n  );\n}\n","import { useState, useEffect } from 'react';\n\n// ----------------------------------------------------------------------\n\nexport default function useCountdown(date) {\n  const [countdown, setCountdown] = useState({\n    days: '00',\n    hours: '00',\n    minutes: '00',\n    seconds: '00'\n  });\n\n  useEffect(() => {\n    const interval = setInterval(() => setNewTime(), 1000);\n    return () => clearInterval(interval);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const setNewTime = () => {\n    const startTime = date;\n    const endTime = new Date();\n    const distanceToNow = startTime - endTime;\n\n    const getDays = Math.floor(distanceToNow / (1000 * 60 * 60 * 24));\n    const getHours = `0${Math.floor((distanceToNow % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))}`.slice(-2);\n    const getMinutes = `0${Math.floor((distanceToNow % (1000 * 60 * 60)) / (1000 * 60))}`.slice(-2);\n    const getSeconds = `0${Math.floor((distanceToNow % (1000 * 60)) / 1000)}`.slice(-2);\n\n    setCountdown({\n      days: getDays || '000',\n      hours: getHours || '000',\n      minutes: getMinutes || '000',\n      seconds: getSeconds || '000'\n    });\n  };\n\n  return countdown;\n}\n\n// Usage\n// const countdown = useCountdown(new Date('07/07/2022 21:30'));\n"],"sourceRoot":""}